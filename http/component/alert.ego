<%
package component

import (
	"log"
)

const (
	AlertStylePrimary   = "primary"
	AlertStyleSecondary = "secondary"
	AlertStyleSuccess   = "success"
	AlertStyleDanger    = "danger"
	AlertStyleWarning   = "warning"
	AlertStyleInfo      = "info"
)

type Alert struct {
	Style string
	Yield func()
}

func (c *Alert) writeClass(w io.Writer) {
	io.WriteString(w, "alert")

	switch c.Style {
	case AlertStylePrimary:
		io.WriteString(w, " alert--primary")
	case AlertStyleSecondary:
		io.WriteString(w, " alert--secondary")
	case AlertStyleSuccess:
		io.WriteString(w, " alert--success")
	case AlertStyleDanger:
		io.WriteString(w, " alert--danger")
	case AlertStyleWarning:
		io.WriteString(w, " alert--warning")
	case AlertStyleInfo:
		io.WriteString(w, " alert--info")
	default:
		log.Printf("Alert: invalid style: %q", c.Style)
	}
}

func (c *Alert) Render(ctx context.Context, w io.Writer) {
%>
<div class="<% c.writeClass(w) %>">
	<% if c.Yield != nil { %><%c.Yield() %><% } %>
</div>
<% } %>

// Generated by ego.
// DO NOT EDIT

//line component/alert.ego:1
package component

import "fmt"
import "html"
import "io"
import "context"

import (
	"log"
)

const (
	AlertStylePrimary   = "primary"
	AlertStyleSecondary = "secondary"
	AlertStyleSuccess   = "success"
	AlertStyleDanger    = "danger"
	AlertStyleWarning   = "warning"
	AlertStyleInfo      = "info"
)

type Alert struct {
	Style string
	Yield func()
}

func (c *Alert) writeClass(w io.Writer) {
	io.WriteString(w, "alert")

	switch c.Style {
	case AlertStylePrimary:
		io.WriteString(w, " alert--primary")
	case AlertStyleSecondary:
		io.WriteString(w, " alert--secondary")
	case AlertStyleSuccess:
		io.WriteString(w, " alert--success")
	case AlertStyleDanger:
		io.WriteString(w, " alert--danger")
	case AlertStyleWarning:
		io.WriteString(w, " alert--warning")
	case AlertStyleInfo:
		io.WriteString(w, " alert--info")
	default:
		log.Printf("Alert: invalid style: %q", c.Style)
	}
}

func (c *Alert) Render(ctx context.Context, w io.Writer) {

//line component/alert.ego:45
	_, _ = io.WriteString(w, "<div class=\"")
//line component/alert.ego:45
	c.writeClass(w)
//line component/alert.ego:45
	_, _ = io.WriteString(w, "\">\n\t")
//line component/alert.ego:46
	if c.Yield != nil {
//line component/alert.ego:46
		c.Yield()
//line component/alert.ego:46
	}
//line component/alert.ego:47
	_, _ = io.WriteString(w, "\n</div>\n")
//line component/alert.ego:48
}

var _ fmt.Stringer
var _ io.Reader
var _ context.Context
var _ = html.EscapeString
